/**
 * ngsi-v2
 * NGSI V2 API
 *
 * OpenAPI spec version: v2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Entity'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./Entity'));
  } else {
    // Browser globals (root is window)
    if (!root.NgsiV2) {
      root.NgsiV2 = {};
    }
    root.NgsiV2.BatchOperation = factory(root.NgsiV2.ApiClient, root.NgsiV2.Entity);
  }
}(this, function(ApiClient, Entity) {
  'use strict';




  /**
   * The BatchOperation model module.
   * @module model/BatchOperation
   * @version 0.1.0
   */

  /**
   * Constructs a new <code>BatchOperation</code>.
   * @alias module:model/BatchOperation
   * @class
   * @param actionType {module:model/BatchOperation.ActionTypeEnum} 
   * @param entities {Array.<module:model/Entity>} 
   */
  var exports = function(actionType, entities) {
    var _this = this;

    _this['actionType'] = actionType;
    _this['entities'] = entities;
  };

  /**
   * Constructs a <code>BatchOperation</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/BatchOperation} obj Optional instance to populate.
   * @return {module:model/BatchOperation} The populated <code>BatchOperation</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('actionType')) {
        obj['actionType'] = ApiClient.convertToType(data['actionType'], 'String');
      }
      if (data.hasOwnProperty('entities')) {
        obj['entities'] = ApiClient.convertToType(data['entities'], [Entity]);
      }
    }
    return obj;
  }

  /**
   * @member {module:model/BatchOperation.ActionTypeEnum} actionType
   */
  exports.prototype['actionType'] = undefined;
  /**
   * @member {Array.<module:model/Entity>} entities
   */
  exports.prototype['entities'] = undefined;


  /**
   * Allowed values for the <code>actionType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.ActionTypeEnum = {
    /**
     * value: "APPEND"
     * @const
     */
    "APPEND": "APPEND",
    /**
     * value: "APPEND_STRICT"
     * @const
     */
    "APPEND_STRICT": "APPEND_STRICT",
    /**
     * value: "UPDATE"
     * @const
     */
    "UPDATE": "UPDATE",
    /**
     * value: "DELETE"
     * @const
     */
    "DELETE": "DELETE"  };


  return exports;
}));


