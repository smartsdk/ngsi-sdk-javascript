/**
 * ngsi-v2
 * NGSI V2 API RC-2018.04
 *
 * OpenAPI spec version: v2
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/SubscriptionNotificationHttp'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./SubscriptionNotificationHttp'));
  } else {
    // Browser globals (root is window)
    if (!root.NgsiV2) {
      root.NgsiV2 = {};
    }
    root.NgsiV2.Provider = factory(root.NgsiV2.ApiClient, root.NgsiV2.SubscriptionNotificationHttp);
  }
}(this, function(ApiClient, SubscriptionNotificationHttp) {
  'use strict';




  /**
   * The Provider model module.
   * @module model/Provider
   * @version 0.1.0
   */

  /**
   * Constructs a new <code>Provider</code>.
   * @alias module:model/Provider
   * @class
   */
  var exports = function() {
    var _this = this;



  };

  /**
   * Constructs a <code>Provider</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Provider} obj Optional instance to populate.
   * @return {module:model/Provider} The populated <code>Provider</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('http')) {
        obj['http'] = SubscriptionNotificationHttp.constructFromObject(data['http']);
      }
      if (data.hasOwnProperty('supportedForwardingMode')) {
        obj['supportedForwardingMode'] = ApiClient.convertToType(data['supportedForwardingMode'], 'String');
      }
    }
    return obj;
  }

  /**
   * @member {module:model/SubscriptionNotificationHttp} http
   */
  exports.prototype['http'] = undefined;
  /**
   * @member {module:model/Provider.SupportedForwardingModeEnum} supportedForwardingMode
   */
  exports.prototype['supportedForwardingMode'] = undefined;


  /**
   * Allowed values for the <code>supportedForwardingMode</code> property.
   * @enum {String}
   * @readonly
   */
  exports.SupportedForwardingModeEnum = {
    /**
     * value: "none"
     * @const
     */
    "none": "none",
    /**
     * value: "query"
     * @const
     */
    "query": "query",
    /**
     * value: "update"
     * @const
     */
    "update": "update",
    /**
     * value: "all"
     * @const
     */
    "all": "all"  };


  return exports;
}));


