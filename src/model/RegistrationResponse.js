/**
 * ngsi-v2
 * NGSI V2 API RC-2018.04
 *
 * OpenAPI spec version: v2
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/DataProvided', 'model/Provider', 'model/RegistrationResponseForwardingInformation'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./DataProvided'), require('./Provider'), require('./RegistrationResponseForwardingInformation'));
  } else {
    // Browser globals (root is window)
    if (!root.NgsiV2) {
      root.NgsiV2 = {};
    }
    root.NgsiV2.RegistrationResponse = factory(root.NgsiV2.ApiClient, root.NgsiV2.DataProvided, root.NgsiV2.Provider, root.NgsiV2.RegistrationResponseForwardingInformation);
  }
}(this, function(ApiClient, DataProvided, Provider, RegistrationResponseForwardingInformation) {
  'use strict';




  /**
   * The RegistrationResponse model module.
   * @module model/RegistrationResponse
   * @version 0.1.0
   */

  /**
   * Constructs a new <code>RegistrationResponse</code>.
   * @alias module:model/RegistrationResponse
   * @class
   */
  var exports = function() {
    var _this = this;








  };

  /**
   * Constructs a <code>RegistrationResponse</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/RegistrationResponse} obj Optional instance to populate.
   * @return {module:model/RegistrationResponse} The populated <code>RegistrationResponse</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'String');
      }
      if (data.hasOwnProperty('description')) {
        obj['description'] = ApiClient.convertToType(data['description'], 'String');
      }
      if (data.hasOwnProperty('provider')) {
        obj['provider'] = Provider.constructFromObject(data['provider']);
      }
      if (data.hasOwnProperty('dataProvided')) {
        obj['dataProvided'] = DataProvided.constructFromObject(data['dataProvided']);
      }
      if (data.hasOwnProperty('expires')) {
        obj['expires'] = ApiClient.convertToType(data['expires'], 'Date');
      }
      if (data.hasOwnProperty('status')) {
        obj['status'] = ApiClient.convertToType(data['status'], 'String');
      }
      if (data.hasOwnProperty('forwardingInformation')) {
        obj['forwardingInformation'] = RegistrationResponseForwardingInformation.constructFromObject(data['forwardingInformation']);
      }
    }
    return obj;
  }

  /**
   * @member {String} id
   */
  exports.prototype['id'] = undefined;
  /**
   * @member {String} description
   */
  exports.prototype['description'] = undefined;
  /**
   * @member {module:model/Provider} provider
   */
  exports.prototype['provider'] = undefined;
  /**
   * @member {module:model/DataProvided} dataProvided
   */
  exports.prototype['dataProvided'] = undefined;
  /**
   * @member {Date} expires
   */
  exports.prototype['expires'] = undefined;
  /**
   * @member {module:model/RegistrationResponse.StatusEnum} status
   */
  exports.prototype['status'] = undefined;
  /**
   * @member {module:model/RegistrationResponseForwardingInformation} forwardingInformation
   */
  exports.prototype['forwardingInformation'] = undefined;


  /**
   * Allowed values for the <code>status</code> property.
   * @enum {String}
   * @readonly
   */
  exports.StatusEnum = {
    /**
     * value: "active"
     * @const
     */
    "active": "active",
    /**
     * value: "inactive"
     * @const
     */
    "inactive": "inactive"  };


  return exports;
}));


